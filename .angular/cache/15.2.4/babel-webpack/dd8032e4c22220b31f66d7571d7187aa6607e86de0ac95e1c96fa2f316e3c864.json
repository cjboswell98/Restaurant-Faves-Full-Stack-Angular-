{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class AddOrderFormComponent {\n  constructor() {\n    this.orderSave = new EventEmitter();\n    this.newOrder = {\n      restaurant: '',\n      description: '',\n      rating: 1,\n      orderAgain: false,\n      id: 0\n    };\n  }\n  submitForm() {\n    // Emit the new order object to the parent component\n    this.orderSave.emit(this.newOrder);\n    // Reset the form\n    this.newOrder = {\n      restaurant: '',\n      description: '',\n      rating: 1,\n      orderAgain: false,\n      id: 0\n    };\n  }\n}\nAddOrderFormComponent.ɵfac = function AddOrderFormComponent_Factory(t) {\n  return new (t || AddOrderFormComponent)();\n};\nAddOrderFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddOrderFormComponent,\n  selectors: [[\"app-add-order-form\"]],\n  outputs: {\n    orderSave: \"orderSave\"\n  },\n  decls: 21,\n  vars: 4,\n  consts: [[3, \"ngSubmit\"], [\"for\", \"restaurant\"], [\"type\", \"text\", \"id\", \"restaurant\", \"name\", \"restaurant\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"rating\"], [\"type\", \"number\", \"id\", \"rating\", \"name\", \"rating\", \"required\", \"\", \"min\", \"1\", \"max\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"orderAgain\"], [\"type\", \"checkbox\", \"id\", \"orderAgain\", \"name\", \"orderAgain\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function AddOrderFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Add Order\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AddOrderFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Restaurant:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function AddOrderFormComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.newOrder.restaurant = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n      i0.ɵɵtext(9, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AddOrderFormComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.newOrder.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Rating (1-5):\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AddOrderFormComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.newOrder.rating = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 7);\n      i0.ɵɵtext(17, \"Order Again?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AddOrderFormComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.newOrder.orderAgain = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"button\", 9);\n      i0.ɵɵtext(20, \"Add Order\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.newOrder.restaurant);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newOrder.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newOrder.rating);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.newOrder.orderAgain);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinValidator, i1.MaxValidator, i1.NgModel, i1.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA4BA,YAAY,QAAQ,eAAe;;;AAS/D,OAAM,MAAOC,qBAAqB;EALlCC;IAMY,cAAS,GAAG,IAAIF,YAAY,EAAS;IAC/C,aAAQ,GAAU;MAChBG,UAAU,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEC,UAAU,EAAE,KAAK;MAC7DC,EAAE,EAAE;KACL;;EAEDC,UAAU;IACR;IACA,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,CAAC;IAElC;IACA,IAAI,CAACA,QAAQ,GAAG;MAAGR,UAAU,EAAE,EAAE;MAAEC,WAAW,EAAE,EAAE;MAAEC,MAAM,EAAE,CAAC;MAAEC,UAAU,EAAE,KAAK;MAChFC,EAAE,EAAE;IAAC,CAAC;EACR;;AAdWN,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAW;EAAAC;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;IAAA;MCTlCC,0BAAI;MAAAA,yBAAS;MAAAA,iBAAK;MAClBA,+BAAgC;MAA1BA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MAC7BD,2BAAK;MACqBA,2BAAW;MAAAA,iBAAQ;MAC3CA,gCAAkG;MAA7CA;QAAA;MAAA,EAAiC;MAAtFA,iBAAkG;MAEpGA,2BAAK;MACsBA,4BAAY;MAAAA,iBAAQ;MAC7CA,iCAAqG;MAA9CA;QAAA;MAAA,EAAkC;MAAzFA,iBAAqG;MAEvGA,4BAAK;MACiBA,8BAAa;MAAAA,iBAAQ;MACzCA,iCAAwG;MAAzDA;QAAA;MAAA,EAA6B;MAA5EA,iBAAwG;MAE1GA,4BAAK;MACqBA,6BAAY;MAAAA,iBAAQ;MAC5CA,iCAA6F;MAApCA;QAAA;MAAA,EAAiC;MAA1FA,iBAA6F;MAE/FA,kCAAsB;MAAAA,0BAAS;MAAAA,iBAAS;;;MAdeA,eAAiC;MAAjCA,iDAAiC;MAI/BA,eAAkC;MAAlCA,kDAAkC;MAI1CA,eAA6B;MAA7BA,6CAA6B;MAInBA,eAAiC;MAAjCA,iDAAiC","names":["EventEmitter","AddOrderFormComponent","constructor","restaurant","description","rating","orderAgain","id","submitForm","orderSave","emit","newOrder","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/cjboswell98/Desktop/TypeScript-O/orders/Restaurant-Faves-Full-Stack-Angular-/src/app/add-order-form/add-order-form.component.ts","/Users/cjboswell98/Desktop/TypeScript-O/orders/Restaurant-Faves-Full-Stack-Angular-/src/app/add-order-form/add-order-form.component.html"],"sourcesContent":["import { Component, Output, EventEmitter } from '@angular/core';\nimport { Order } from 'src/interfaces/order';\n\n\n@Component({\n  selector: 'app-add-order-form',\n  templateUrl: './add-order-form.component.html',\n  styleUrls: ['./add-order-form.component.css']\n})\nexport class AddOrderFormComponent {\n  @Output() orderSave = new EventEmitter<Order>();\n  newOrder: Order = {\n    restaurant: '', description: '', rating: 1, orderAgain: false,\n    id: 0\n  };\n\n  submitForm() {\n    // Emit the new order object to the parent component\n    this.orderSave.emit(this.newOrder);\n\n    // Reset the form\n    this.newOrder = {  restaurant: '', description: '', rating: 1, orderAgain: false,\n    id: 0};\n  }\n}\n","<h2>Add Order</h2>\n<form (ngSubmit)=\"submitForm()\">\n  <div>\n    <label for=\"restaurant\">Restaurant:</label>\n    <input type=\"text\" id=\"restaurant\" name=\"restaurant\" [(ngModel)]=\"newOrder.restaurant\" required />\n  </div>\n  <div>\n    <label for=\"description\">Description:</label>\n    <input type=\"text\" id=\"description\" name=\"description\" [(ngModel)]=\"newOrder.description\" required />\n  </div>\n  <div>\n    <label for=\"rating\">Rating (1-5):</label>\n    <input type=\"number\" id=\"rating\" name=\"rating\" [(ngModel)]=\"newOrder.rating\" required min=\"1\" max=\"5\" />\n  </div>\n  <div>\n    <label for=\"orderAgain\">Order Again?</label>\n    <input type=\"checkbox\" id=\"orderAgain\" name=\"orderAgain\" [(ngModel)]=\"newOrder.orderAgain\" />\n  </div>\n  <button type=\"submit\">Add Order</button>\n</form>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}